<Window x:Class="MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="GCM2 Flex" WindowState="Maximized" Icon="/Resources/Images/TLDLogo.png" 
    xmlns:b="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ViewModel="clr-namespace:gcm2.UI.ViewModels" UseLayoutRounding="True"
    xmlns:Converter="clr-namespace:gcm2.UI.Common"
    ScrollViewer.HorizontalScrollBarVisibility="Auto" 
    ScrollViewer.VerticalScrollBarVisibility="Auto" >



    <Window.Resources>
        <ViewModel:MainWindowViewModel x:Key="MainWindowViewModel"></ViewModel:MainWindowViewModel>
        <Converter:BitmapConverter x:Key="BitmapConverter"></Converter:BitmapConverter>

        <Style x:Key="ContextMenuItemStyle">
            <Setter Property="MenuItem.Header" Value="{Binding Text}"/>
            <Setter Property="MenuItem.ItemsSource" Value="{Binding Children}"/>
            <Setter Property="MenuItem.Command" Value="{Binding Command}" />
        </Style>

        <Style x:Key="OnOffToggleImageStyle" TargetType="ToggleButton">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/GCM2Flex;component/Resources/Images/boldL.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/GCM2Flex;component/Resources/Images/bold.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Cmb" TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>



    <Grid DataContext="{StaticResource MainWindowViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="75"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <DockPanel Width="Auto" Grid.Row="0" Grid.Column="0">
            <Menu DockPanel.Dock="Top" ItemsSource="{Binding MenuOptions, Source={StaticResource MainWindowViewModel}}"
                  ItemContainerStyle="{StaticResource ContextMenuItemStyle}">
            </Menu>
        </DockPanel>

        <Border BorderBrush="DimGray" BorderThickness="5" Grid.Row="1" Grid.Column="0">
            <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="SkyBlue" />
                    <GradientStop Offset="1" Color="White" />
                </LinearGradientBrush>
            </Border.Background>

            <Grid Width="Auto" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="70"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="0.05*"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="200"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="0.05*"></ColumnDefinition>
                    <!--6-->
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width=".10*"></ColumnDefinition>
                    <ColumnDefinition Width="45"></ColumnDefinition>
                    <ColumnDefinition Width=".10*"></ColumnDefinition>
                    <!--9-->
                    <ColumnDefinition Width=".10*"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="125"></ColumnDefinition>
                    <ColumnDefinition Width=".10*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock HorizontalAlignment="Left" Grid.Row="0" Grid.Column="1"
                           Text="Select Font" VerticalAlignment="Center"></TextBlock>

                <ComboBox HorizontalAlignment="Left" SelectedItem="{Binding SelectedFontFamily}" Grid.Row="0" Grid.Column="3" Height="30" 
                      VerticalAlignment="Center" Width="200"
                      ItemsSource="{Binding FontCollection, Source={StaticResource MainWindowViewModel}}">
                </ComboBox>

                <TextBlock  Grid.Row="0" Grid.Column="5" Text="Select Size" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>

                <ComboBox SelectedItem="{Binding SelectedFontSize, Source={StaticResource MainWindowViewModel}}" 
                              Grid.Row="0" Grid.Column="7" Height="30"  
                     ItemsSource="{Binding FontSizes, Source={StaticResource MainWindowViewModel}}" >
                </ComboBox>

                <ToggleButton Grid.Row="0" Grid.Column="8" HorizontalAlignment="Center" IsChecked="{Binding ButtonState}"
                 Command="{Binding BoldCommand}" Height="22" Width="23" VerticalAlignment="Center" Style="{StaticResource OnOffToggleImageStyle}"></ToggleButton>

                <Button  Grid.Row="0" Grid.Column="9" Height="30" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="16" Foreground="WhiteSmoke"
                  Width="100" Background="DimGray"  Content="Apply" Command="{Binding ApplyCommand}"></Button>

                <TextBlock  Grid.Row="0" Grid.Column="10" Text="Language" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>

                <TextBox Text="{Binding LanguageName, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"
                         Grid.Row="0" Grid.Column="12" VerticalAlignment="Center" FontSize="16" Width="150" MaxLength="3" CharacterCasing="Upper"></TextBox>

                <Image Grid.Row="0" Grid.Column="13" Source="/GCM2Flex;component/Resources/Images\TLDLogo.png" Height="50" Width="75"></Image>

            </Grid>

        </Border>


        <Border BorderBrush="DimGray" BorderThickness="5" Grid.Row="2" Grid.Column="0">
            <DataGrid CanUserResizeColumns="False" CanUserResizeRows="False" 
                      Grid.Row="2" Grid.Column="0" SelectedItem="{Binding SelectedComponent}" CanUserAddRows="False"
                AutoGenerateColumns="False" Width="Auto"
                Name="dataGrid1" VerticalAlignment="Top" VerticalContentAlignment="Center"
                ItemsSource="{Binding ListOfComponents, Mode=TwoWay}">

                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <ToggleButton x:Name="RowHeaderToggleButton"
					              Cursor="Hand" />
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>

                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="ID" Binding="{Binding ItemCode}" Width=".10*"/>
                    <DataGridTextColumn IsReadOnly="True" Header="Text in English" Binding="{Binding ItemValue}" Width=".20*"/>
                    <DataGridTemplateColumn Header="Text In Your Language" Width=".25*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBox FontSize="{Binding CustomTextFontSize, Source={StaticResource MainWindowViewModel}}" 
                                             BorderThickness="1" Width="Auto"
                                         FontFamily="{Binding CustomTextFontFamily, Source={StaticResource MainWindowViewModel}}" 
                                             Margin="2" Text="{Binding CustomText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="LostFocus">
                                                <b:InvokeCommandAction Command="{Binding LostFocusCommand, Source={StaticResource MainWindowViewModel}}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Bitmap" Width=".45*" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding BitmapImg}" Stretch="None">
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>
        </Border>
    </Grid>
</Window>
